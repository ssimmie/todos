<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.ssimmie</groupId>
    <artifactId>todos</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </parent>
  <groupId>net.ssimmie.todos</groupId>
  <artifactId>application</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <name>application</name>
  <description>Todos application</description>
  <properties>
    <blockhound-junit-platform.version>1.0.8.RELEASE</blockhound-junit-platform.version>
    <dockerfile-maven-version>1.4.13</dockerfile-maven-version>
  </properties>
  <dependencies>
    <dependency>
      <artifactId>domain</artifactId>
      <groupId>net.ssimmie.todos</groupId>
      <version>0.1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <groupId>io.micrometer</groupId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-webflux</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-data-cassandra-reactive</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>junit-vintage-engine</artifactId>
          <groupId>org.junit.vintage</groupId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>reactor-test</artifactId>
      <groupId>io.projectreactor</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>cassandra</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jparams</groupId>
      <artifactId>to-string-verifier</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>blockhound</id>
      <dependencies>
        <dependency>
          <groupId>io.projectreactor.tools</groupId>
          <artifactId>blockhound-junit-platform</artifactId>
          <version>${blockhound-junit-platform.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>jvm</id>
      <properties>
        <native.build.skip>true</native.build.skip>
      </properties>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <configuration>
          <filesNamePattern>.*\.java</filesNamePattern>
          <style>google</style>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>process-aot</id>
            <goals>
              <goal>process-aot</goal>
            </goals>
          </execution>
          <execution>
            <id>build-native-image</id>
            <phase>package</phase>
            <goals>
              <goal>build-image-no-fork</goal>
            </goals>
            <configuration>
              <imageName>todos-application:native</imageName>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <image>
            <builder>paketobuildpacks/builder-jammy-base:latest</builder>
            <env>
              <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
              <BP_JVM_VERSION>17</BP_JVM_VERSION>
              <BP_NATIVE_IMAGE_BUILD_ARGUMENTS>-H:+ReportExceptionStackTraces --initialize-at-build-time=org.slf4j --initialize-at-run-time=io.netty --trace-class-initialization=ch.qos.logback.classic.Logger --trace-object-instantiation=ch.qos.logback.core.AsyncAppenderBase</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
            </env>
          </image>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-reachability-metadata</id>
            <goals>
              <goal>add-reachability-metadata</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>${dockerfile-maven-version}</version>
        <executions>
          <execution>
            <id>version</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <tag>${project.version}</tag>
            </configuration>
          </execution>
          <execution>
            <id>latest</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <tag>latest</tag>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <skipDockerInfo>true</skipDockerInfo>
          <repository>docker.pkg.github.com/ssimmie/artifact-repository/todos-${project.artifactId}</repository>
          <tag>${project.version}</tag>
          <buildArgs>
            <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
